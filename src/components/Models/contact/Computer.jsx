// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.5.3 computer-optimized.glb -T 
// Files: computer-optimized.glb [486.38KB] > C:\Users\karge\Desktop\3D-Portfolio\public\models\computer-optimized-transformed.glb [39.72KB] (92%)
// */

// import React from 'react'
// import { useGLTF } from '@react-three/drei'

// export function Computer(props) {
//   const { nodes, materials } = useGLTF('/models/computer-optimized-transformed.glb')
//   return (
//     <group {...props} dispose={null}>
//       <group position={[-4.005, 67.549, 58.539]}>
//         <mesh geometry={nodes.Cube000_ComputerDesk_0001_1.geometry} material={materials['ComputerDesk.001']} />
//         <mesh geometry={nodes.Cube000_ComputerDesk_0001_2.geometry} material={materials['FloppyDisk.001']} />
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('/models/computer-optimized-transformed.glb')




//optimized for lag
// import React, { useMemo } from 'react'
// import { useGLTF } from '@react-three/drei'

// function Computer(props) {
//   const { nodes, materials } = useGLTF('/models/computer-optimized-transformed.glb')
  
//   // Memoize the geometry to prevent re-calculations
//   const memoizedMeshes = useMemo(() => (
//     <group position={[-4.005, 67.549, 58.539]}>
//       <mesh 
//         geometry={nodes.Cube000_ComputerDesk_0001_1.geometry} 
//         material={materials['ComputerDesk.001']}
//         castShadow
//         receiveShadow
//       />
//       <mesh 
//         geometry={nodes.Cube000_ComputerDesk_0001_2.geometry} 
//         material={materials['FloppyDisk.001']}
//         castShadow
//         receiveShadow
//       />
//     </group>
//   ), [nodes, materials]);

//   return (
//     <group {...props} dispose={null}>
//       {memoizedMeshes}
//     </group>
//   )
// }

// useGLTF.preload('/models/computer-optimized-transformed.glb')

// export default Computer

//optimised more for lag2
import React, { useMemo } from 'react'
import { useGLTF } from '@react-three/drei'

function Computer(props) {
  const { nodes, materials } = useGLTF('/models/computer-optimized-transformed.glb')
  
  // Optimize materials
  const optimizedMaterials = useMemo(() => {
    const mats = {};
    Object.keys(materials).forEach(key => {
      mats[key] = materials[key].clone();
      mats[key].needsUpdate = false;
      mats[key].matcap = null; // Remove expensive material features
    });
    return mats;
  }, [materials]);
  
  // Memoize the geometry to prevent re-calculations
  const memoizedMeshes = useMemo(() => (
    <group position={[-4.005, 67.549, 58.539]}>
      <mesh 
        geometry={nodes.Cube000_ComputerDesk_0001_1.geometry} 
        material={optimizedMaterials['ComputerDesk.001']}
        castShadow={false}  // Disable shadows for this mesh
        receiveShadow
        frustumCulled
      />
      <mesh 
        geometry={nodes.Cube000_ComputerDesk_0001_2.geometry} 
        material={optimizedMaterials['FloppyDisk.001']}
        castShadow={false}  // Disable shadows for this mesh
        receiveShadow
        frustumCulled
      />
    </group>
  ), [nodes, optimizedMaterials]);

  return (
    <group {...props} dispose={null}>
      {memoizedMeshes}
    </group>
  )
}

useGLTF.preload('/models/computer-optimized-transformed.glb')

export default Computer